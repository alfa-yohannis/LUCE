# -*- mode: ruby -*-
# vi: set ft=ruby :


# LuceVM Setup
Vagrant.configure("2") do |config|


  config.vm.define "lucevm", primary: true do |lucevm|

    # Use Ubuntu 16.04 as basis for VM
    lucevm.vm.box = "ubuntu/xenial64"
    lucevm.vm.box_check_update = false

    # ==== PORT CONFIGURATION ====

    # Apache Web Server
    lucevm.vm.network :forwarded_port, guest: 80, host: 4567

    # Jupyter Notebook
    lucevm.vm.network :forwarded_port, guest: 8888, host: 8888

    # Jupyter Notebook Alternative Port
    lucevm.vm.network :forwarded_port, guest: 8889, host: 8889

    # Ganache Blockchain
    lucevm.vm.network :forwarded_port, guest: 8545, host: 8545

    # Django - Open a few ports for testing multiple servers
    lucevm.vm.network :forwarded_port, guest: 8000, host: 8000
    lucevm.vm.network :forwarded_port, guest: 8001, host: 8001
    lucevm.vm.network :forwarded_port, guest: 8002, host: 8002

    # ==== VirtualBox CONFIGURATION ====

    lucevm.vm.provider "virtualbox" do |vb|

      # Amount of memory used by VM (1GB)
      vb.memory = "1024"    
      #vb.memory = "2048"

      # Display VirtualBox GUI when booting the machine
      # vb.gui = true

      # Disable creation of log file
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]

      # Hard-code virtual ethernet cable connection
      # This prevents SSH auth method: private key from getting stuck
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end

    # ==== ADDITIONAL CONFIGURATION ====
    
    # Set up shared network interface
    lucevm.vm.network "private_network", ip: "192.168.72.2"

    # Disable checking for new vbguest updates
    if Vagrant.has_plugin?("vagrant-vbguest")
    	lucevm.vbguest.auto_update = false
    end

    # ==== SCRIPTS TO RUN AFTER STARTUP ====

    lucevm.vm.provision :shell, path: "./scripts/bootstrap.sh"
  


  end

end



# PostgreSQL Setup

# Used to later check if Database was already provisioned
$script = <<SCRIPT
date > /etc/vagrant_provisioned_at
SCRIPT

Vagrant.configure("2") do |config|
  
  config.vm.define "lucedb", autostart: false do |lucedb| 
    # Create note that system was provisioned
    lucedb.vm.provision "shell", inline: $script

    # Disable automatic update check
    lucedb.vm.box_check_update = false

    # Disable checking for new vbguest updates
    if Vagrant.has_plugin?("vagrant-vbguest")
    	lucedb.vbguest.auto_update = false
    end

    # Set up shared network interface
    lucedb.vm.network "private_network", ip: "192.168.72.3"
    lucedb.vm.network :forwarded_port, guest: 5432, host: 15432
  end

end

# Apply some configuration with old version of settings
Vagrant.configure("1") do |config|

  config.vm.define "lucedb" do |lucedb|
    # trusty = Ubuntu 14.04.6 LTS
    lucedb.vm.box = "ubuntu/trusty64"
    lucedb.vm.host_name = "postgresql" 
    lucedb.vm.share_folder "bootstrap", "/mnt/bootstrap", ".", :create => true
    
    # Provision is performed only the first time machine is started
    lucedb.vm.provision :shell, :path => "scripts/bootstrap_lucedb.sh"
  end

end